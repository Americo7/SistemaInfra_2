generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["autenticacion", "parametricas", "registro"]
}

model Rol {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  user_rol UserRol[]

  @@map("rol")
  @@schema("autenticacion")
}

model User {
  id                  Int       @id @default(autoincrement())
  nombre              String?
  email               String    @unique
  hashedPassword      String    @default("")
  salt                String    @default("")
  resetToken          String?
  resetTokenExpiresAt DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime
  user_rol            UserRol[]

  @@map("user")
  @@schema("autenticacion")
}

model UserRol {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  rol    Rol  @relation(fields: [roleId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@map("user_rol")
  @@schema("autenticacion")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Componente {
  id                   Int          @id(map: "componente_pk") @default(autoincrement())
  id_sistema           Int
  nombre               String       @db.VarChar(30)
  dominio              String
  descripcion          String
  cod_entorno          String       @db.VarChar(20)
  cod_categoria        String       @db.VarChar(20)
  gitlab_repo          String?      @db.VarChar(50)
  gitlab_rama          String?      @db.VarChar(50)
  tecnologia           Json?
  estado               estado       @map("_estado")
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  sistemas             Sistema      @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_id")
  despliegue           Despliegue[]

  @@map("componentes")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Despliegue {
  id                   Int                  @id(map: "despliegue_pk") @default(autoincrement())
  id_componente        Int
  id_maquina           Int
  fecha_despliegue     DateTime             @db.Timestamp(6)
  estado               estado               @map("_estado")
  fecha_creacion       DateTime             @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int                  @map("_usuario_creacion")
  fecha_modificacion   DateTime?            @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?                 @map("_usuario_modificacion")
  fecha_solicitud      DateTime             @db.Timestamp(6)
  unidad_solicitante   String               @db.VarChar(10)
  solicitante          String
  cod_tipo_respaldo    String               @db.VarChar(20)
  referencia_respaldo  String               @db.VarChar(100)
  estado_despliegue    String               @db.VarChar(20)
  descripcion          String
  componentes          Componente           @relation(fields: [id_componente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_componente_id")
  maquinas             Maquina              @relation(fields: [id_maquina], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desppliegue_maquina")
  despliegue_bitacora  DespliegueBitacora[]

  @@map("despliegue")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Entidad {
  id                   Int       @id(map: "entidades_pk") @default(autoincrement())
  codigo               String    @db.VarChar(10)
  sigla                String    @db.VarChar(15)
  nombre               String    @db.VarChar(150)
  estado               estado    @map("_estado")
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  sistemas             Sistema[]

  @@map("entidades")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Role {
  id                   Int          @id(map: "roles_pk") @default(autoincrement())
  nombre               String       @db.VarChar(30)
  cod_tipo_rol         String       @db.VarChar(20)
  descripcion          String
  estado               estado       @map("_estado")
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  usuario_roles        UsuarioRol[]

  @@map("roles")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Sistema {
  id                   Int          @id(map: "sistema_pk") @default(autoincrement())
  id_padre             Int?
  id_entidad           Int
  codigo               String       @db.VarChar(20)
  sigla                String?      @db.VarChar(25)
  nombre               String       @db.VarChar(150)
  descripcion          String
  estado               estado       @map("_estado")
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  ra_creacion          String?      @db.VarChar(100)
  componentes          Componente[]
  entidades            Entidad      @relation(fields: [id_entidad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entidad_id")
  sistemas             Sistema?     @relation("sistemasTosistemas", fields: [id_padre], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_padre_id")
  other_sistemas       Sistema[]    @relation("sistemasTosistemas")
  usuario_roles        UsuarioRol[]

  @@map("sistemas")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model UsuarioRol {
  id                   Int       @id(map: "usuario_roles_pk") @default(autoincrement())
  id_usuario           Int
  id_rol               Int
  id_maquina           Int?
  id_sistema           Int?
  estado               estado    @map("_estado")
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  maquinas             Maquina?  @relation(fields: [id_maquina], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_maquina_usuario_roles")
  roles                Role      @relation(fields: [id_rol], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rol_id")
  sistemas             Sistema?  @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_2_id")
  usuarios             Usuario   @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_id")

  @@map("usuario_roles")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Usuario {
  id                   Int          @id(map: "usuario_pk") @default(autoincrement())
  id_ciudadano_digital String?      @db.VarChar(30)
  nombre_usuario       String       @db.VarChar(25)
  contrasena           String?
  nro_documento        String       @db.VarChar(20)
  nombres              String       @db.VarChar(40)
  primer_apellido      String       @db.VarChar(40)
  segundo_apellido     String       @db.VarChar(40)
  celular              String       @db.VarChar(15)
  email                String       @db.VarChar(100)
  estado               estado       @map("_estado")
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  usuario_roles        UsuarioRol[]

  @@map("usuarios")
  @@schema("registro")
}

model Parametro {
  id                   Int       @id(map: "parametros_pk") @default(autoincrement())
  codigo               String    @unique(map: "parametro_codigo_uq") @db.VarChar(20)
  nombre               String
  grupo                String    @db.VarChar(20)
  estado               estado    @default(ACTIVO) @map("_estado")
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  descripcion          String?

  @@map("parametros")
  @@schema("parametricas")
}

model DataCenter {
  id                   Int             @id(map: "data_centers_pk") @default(autoincrement())
  nombre               String          @db.VarChar(15)
  ubicacion            String
  estado               estado          @default(ACTIVO) @map("_estado")
  fecha_creacion       DateTime        @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int             @map("_usuario_creacion")
  fecha_modificacion   DateTime?       @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?            @map("_usuario_modificacion")
  infra_afectada       InfraAfectada[]
  servidores           Servidor[]

  @@map("data_centers")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Evento {
  id                   Int               @id(map: "evento_pk") @default(autoincrement())
  cod_tipo_evento      String            @db.VarChar(20)
  descripcion          String
  fecha_evento         DateTime          @db.Timestamp(6)
  responsables         Int[]
  estado_evento        String            @db.VarChar(20)
  estado               estado            @map("_estado")
  fecha_creacion       DateTime          @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int               @map("_usuario_creacion")
  fecha_modificacion   DateTime?         @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?              @map("_usuario_modificacion")
  cite                 String?           @db.VarChar(50)
  solicitante          String?           @db.VarChar(100)
  cod_evento           String?           @db.VarChar(30)
  eventos_bitacora     EventosBitacora[]
  infra_afectada       InfraAfectada[]

  @@map("eventos")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model EventosBitacora {
  id                   Int       @id(map: "evento_bitacora_pk") @default(autoincrement())
  id_evento            Int
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  estado_anterior      String    @db.VarChar(20)
  estado_actual        String    @db.VarChar(20)
  descripcion          String
  eventos              Evento    @relation(fields: [id_evento], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento_bitacora")

  @@map("eventos_bitacora")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model InfraAfectada {
  id                   Int         @id(map: "infra_afectada_pk") @default(autoincrement())
  id_evento            Int
  id_data_center       Int?
  id_servidor          Int?
  id_maquina           Int?
  estado               estado      @map("_estado")
  fecha_creacion       DateTime    @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int         @map("_usuario_creacion")
  fecha_modificacion   DateTime?   @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?        @map("_usuario_modificacion")
  data_centers         DataCenter? @relation(fields: [id_data_center], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dtacenter_evento")
  eventos              Evento      @relation(fields: [id_evento], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_eventos")
  maquinas             Maquina?    @relation(fields: [id_maquina], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_maquina_evento")
  servidores           Servidor?   @relation(fields: [id_servidor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_evento")

  @@map("infra_afectada")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Maquina {
  id                          Int                         @id(map: "maquina_pk") @default(autoincrement())
  codigo                      String?                     @db.VarChar(50)
  nombre                      String                      @db.VarChar(50)
  ip                          String                      @db.Inet
  so                          String                      @db.VarChar(25)
  ram                         Int                         @db.SmallInt
  almacenamiento              Json                        @db.Json
  cpu                         Int                         @db.SmallInt
  estado                      estado                      @map("_estado")
  fecha_creacion              DateTime                    @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion            Int                         @map("_usuario_creacion")
  fecha_modificacion          DateTime?                   @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion        Int?                        @map("_usuario_modificacion")
  cod_plataforma              String                      @db.VarChar(20)
  es_virtual                  Boolean
  asignacion_servidor_maquina AsignacionServidorMaquina[]
  despliegue                  Despliegue[]
  infra_afectada              InfraAfectada[]
  usuario_roles               UsuarioRol[]

  @@map("maquinas")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Servidor {
  id                          Int                         @id(map: "servidor_pk") @default(autoincrement())
  cod_inventario_agetic       String                      @db.VarChar(10)
  nombre                      String                      @db.VarChar(30)
  ram                         Int?                        @db.SmallInt
  almacenamiento              Int?                        @db.SmallInt
  estado_operativo            String                      @db.VarChar(15)
  estado                      estado                      @map("_estado")
  fecha_creacion              DateTime                    @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion            Int                         @map("_usuario_creacion")
  fecha_modificacion          DateTime?                   @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion        Int?                        @map("_usuario_modificacion")
  id_data_center              Int
  serie                       String                      @db.VarChar(30)
  id_padre                    Int?
  cod_tipo_servidor           String                      @db.VarChar(20)
  marca                       String                      @db.VarChar(30)
  modelo                      String                      @db.VarChar(50)
  asignacion_servidor_maquina AsignacionServidorMaquina[]
  infra_afectada              InfraAfectada[]
  data_centers                DataCenter                  @relation(fields: [id_data_center], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_hardware_servidor")
  servidores                  Servidor?                   @relation("servidoresToservidores", fields: [id_padre], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_servidor_harware")
  other_servidores            Servidor[]                  @relation("servidoresToservidores")

  @@map("servidores")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model AsignacionServidorMaquina {
  id                   Int       @id(map: "asignacion_ms_pk") @default(autoincrement())
  id_servidor          Int
  id_maquina           Int
  id_cluster           Int?
  estado               estado    @map("_estado")
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  clusters             Cluster?  @relation(fields: [id_cluster], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cluster_fk")
  maquinas             Maquina   @relation(fields: [id_maquina], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_maquina_servidor")
  servidores           Servidor  @relation(fields: [id_servidor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_maquina")

  @@map("asignacion_servidor_maquina")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Cluster {
  id                          Int                         @id(map: "cluster_pk") @default(autoincrement())
  nombre                      String                      @db.VarChar(25)
  cod_tipo_cluster            String                      @db.VarChar(20)
  descripcion                 String
  estado                      estado                      @map("_estado")
  fecha_creacion              DateTime                    @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion            Int                         @map("_usuario_creacion")
  fecha_modificacion          DateTime?                   @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion        Int?                        @map("_usuario_modificacion")
  asignacion_servidor_maquina AsignacionServidorMaquina[]

  @@map("clusters")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DespliegueBitacora {
  id                   Int        @id(map: "despliegue_bitacora_pk") @default(autoincrement())
  id_despliegue        Int
  estado_anterior      String     @db.VarChar(20)
  estado_actual        String     @db.VarChar(20)
  fecha_creacion       DateTime   @default(now()) @map("_fecha_creacion") @db.Timestamp(6)
  usuario_creacion     Int        @map("_usuario_creacion")
  fecha_modificacion   DateTime?  @map("_fecha_modificacion") @db.Timestamp(6)
  usuario_modificacion Int?       @map("_usuario_modificacion")
  descripcion          String
  despliegue           Despliegue @relation(fields: [id_despliegue], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_bitacora_despliegue")

  @@map("despliegue_bitacora")
  @@schema("registro")
}

enum estado {
  ACTIVO
  INACTIVO

  @@map("estado")
  @@schema("registro")
}
